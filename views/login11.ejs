<!DOCTYPE html>
<html>
<head>
    <meta charset=utf-8>
    <title>新铁管理</title>
    <link rel=stylesheet href=/app/assets/css/iview.css>
    <style>
        .login-conntain {
            text-align: center;
            background: #009688;
            height: 100%;
        }

        .login {
            margin: auto;
            margin-top: 240px;
            display: inline-block;
            position: absolute;
            top: 0;
            right: 33%;
        }

        .login p span {
            display: inline-block;
            width: 50px;
            margin-right: 15px;

        }

        .login p {
            margin: 15px 0;
            color: #3b405a;
            text-align: right;
        }

        #app {
            height: 100%;
            font-family: 'Avenir', Helvetica, Arial, sans-serif;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
            color: #2c3e50;
            margin-top: 0;
        }
    </style>

</head>
<body>
<div id=app>
    <div class="login-conntain">
        <canvas id="Mycanvas"></canvas>
        <div class="login">
            <div>
                <h3 style="font-size: 28px;padding: 0;">欢迎登录新上铁高铁后台管理系统</h3>
                <p style="margin-bottom: 46px;color: #2d3837;">Welcome Surfing On ...</p>
            </div>

            <p>
                <span>用户名</span>
                <i-input v-model="username" placeholder="Enter username..." style="width: 300px"/>
            </p>
            <p>
                <span>密码</span>
                <i-input type="password" v-model="password" placeholder="Enter password..." style="width: 300px"/>
            </p>
            <p style="text-align: right;margin-top: 20px;">
                <i-button type="success" v-on:click="logining" style="margin-right: 15px">login</i-button>
                <i-button type="error" v-on:click="resetVal">reset</i-button>
            </p>
        </div>
    </div>
</div>
<script src=/app/assets/js/jquery-1.10.2.min.js></script>
<script src=/app/assets/js/vue.min.js></script>
<script src=/app/assets/js/iview.min.js></script>
<script>
  $(function() {

    new Vue(
        {
          el     : '#app',
          data   : {
            username: '',
            password: '',
          },
          methods: {
            logining: function() {
              var that = this;

              if (!this.username) {
                this.$Message.error({
                  content : '请填写用户名。',
                  duration: 3,
                });

                return;
              }
              if (!this.password) {
                this.$Message.error({
                  content : '请填密码。',
                  duration: 3,
                });

                return;
              }
              console.log(this.username)
              that.$Loading.start();
              $.ajax({
                url        : '/index/signin',
                type       : 'POST',
                data       : {
                  "password": this.password,
                  "username": this.username
                },
                success    : function(res) {

                  if (res.err) {
                    that.$Loading.error();
                    that.$Message.error({
                      content : res.msg,
                      duration: 3.5,
                    });
                  }
                  else {
                    that.$Loading.finish();
                    that.$Message.success({
                      content : '登录成功。',
                      duration: 3,
                    });

                    document.location.assign('/index/conf');
                  }
                },
                error: function() {
                    that.$Loading.error();
                }
              });

            },
            resetVal: function() {
              this.username = '';
              this.password = '';
            },
          },
          mounted() {
            sessionStorage.getItem('token') ? (this.login = 'true'
            ) : (this.login = 'false'
            );

            //定义画布宽高和生成点的个数
            var WIDTH = window.innerWidth, HEIGHT = window.innerHeight, POINT = 35;

            var canvas = document.getElementById('Mycanvas');
            canvas.width = WIDTH,
                canvas.height = HEIGHT;
            var context = canvas.getContext('2d');
            context.strokeStyle = 'rgba(0,0,0,0.2)',
                context.strokeWidth = 1,
                context.fillStyle = 'rgba(0,0,0,0.1)';
            var circleArr = [];

            //线条：开始xy坐标，结束xy坐标，线条透明度
            function Line(x, y, _x, _y, o) {
              this.beginX = x,
                  this.beginY = y,
                  this.closeX = _x,
                  this.closeY = _y,
                  this.o = o;
            }

            //点：圆心xy坐标，半径，每帧移动xy的距离
            function Circle(x, y, r, moveX, moveY) {
              this.x = x,
                  this.y = y,
                  this.r = r,
                  this.moveX = moveX,
                  this.moveY = moveY;
            }

            //生成max和min之间的随机数
            function num(max, _min) {
              var min = arguments[1] || 0;
              return Math.floor(Math.random() * (max - min + 1
              ) + min);
            }

            // 绘制原点
            function drawCricle(cxt, x, y, r, moveX, moveY) {
              var circle = new Circle(x, y, r, moveX, moveY)
              cxt.beginPath()
              cxt.arc(circle.x, circle.y, circle.r, 0, 2 * Math.PI)
              cxt.closePath()
              cxt.fill();
              return circle;
            }

            //绘制线条
            function drawLine(cxt, x, y, _x, _y, o) {
              var line = new Line(x, y, _x, _y, o)
              cxt.beginPath()
              cxt.strokeStyle = 'rgba(0,0,0,' + o + ')'
              cxt.moveTo(line.beginX, line.beginY)
              cxt.lineTo(line.closeX, line.closeY)
              cxt.closePath()
              cxt.stroke();

            }

            //初始化生成原点
            function init() {
              circleArr = [];
              for (var i = 0; i < POINT; i++) {
                circleArr.push(
                    drawCricle(context, num(WIDTH), num(HEIGHT), num(15, 2), num(10, -10) / 40, num(10, -10) / 40));
              }
              draw();
            }

            //每帧绘制
            function draw() {
              context.clearRect(0, 0, canvas.width, canvas.height);
              for (var i = 0; i < POINT; i++) {
                drawCricle(context, circleArr[i].x, circleArr[i].y, circleArr[i].r);
              }
              for (var i = 0; i < POINT; i++) {
                for (var j = 0; j < POINT; j++) {
                  if (i + j < POINT) {
                    var A           = Math.abs(circleArr[i + j].x - circleArr[i].x),
                        B           = Math.abs(circleArr[i + j].y - circleArr[i].y);
                    var lineLength  = Math.sqrt(A * A + B * B);
                    var C           = 1 / lineLength * 7 - 0.009;
                    var lineOpacity = C > 0.03 ? 0.03 : C;
                    if (lineOpacity > 0) {
                      drawLine(
                          context, circleArr[i].x, circleArr[i].y, circleArr[i + j].x, circleArr[i + j].y, lineOpacity);
                    }
                  }
                }
              }
            }

            //调用执行
            window.onload = function() {
              init();
              setInterval(function() {
                for (var i = 0; i < POINT; i++) {
                  var cir = circleArr[i];
                  cir.x += cir.moveX;
                  cir.y += cir.moveY;
                  if (cir.x > WIDTH) cir.x = 0;
                  else if (cir.x < 0) cir.x = WIDTH;
                  if (cir.y > HEIGHT) cir.y = 0;
                  else if (cir.y < 0) cir.y = HEIGHT;

                }
                draw();
              }, 16);
            }

          }
          ,
        })

  })
</script>
</body>
</html>